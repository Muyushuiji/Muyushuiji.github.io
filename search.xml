<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>postgresql编译安装</title>
      <link href="/2023/02/17/Postgresql%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/"/>
      <url>/2023/02/17/Postgresql%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="postgresql编译安装"><a href="#postgresql编译安装" class="headerlink" title="postgresql编译安装"></a>postgresql编译安装</h3><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><p>需要提前安装<code>postgresql</code>依赖<code>gcc g++ zlib perl openssl readline </code>。</p><p>在官方网站<a href="https://vault.centos.org/7.6.1810/os/x86_64/Packages/">https://vault.centos.org/7.6.1810/os/x86_64/Packages/</a> 查询依赖需要的rpm安装包，将所需要的依赖包都放在同一个文件，避免循环依赖问题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm  -ivh  *.rpm --nodeps --force</span><br></pre></td></tr></table></figure><p>安装完成确认依赖是否安装完成 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc -v</span><br><span class="line">g++ -v</span><br><span class="line">perl -version</span><br></pre></td></tr></table></figure><p>其他涉及依赖根据编译提示错误问题依次安装，若碰到依赖循环使用强制安装<code>--nodeps --force</code>忽略二次依赖问题。</p><h4 id="postgresql安装"><a href="#postgresql安装" class="headerlink" title="postgresql安装"></a><code>postgresql</code>安装</h4><h5 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h5><p>准备源码 <code>postgresql-12.5.tar.bz2</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压</span></span><br><span class="line">tar  jxf postgresql-12.5.tar.bz2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">预编译指定目录</span></span><br><span class="line">./configure --prefix=/usr/local/pgsql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">预编译没有问题执行</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h5 id="更改配置"><a href="#更改配置" class="headerlink" title="更改配置"></a>更改配置</h5><p>源码自带启动脚本，位于**&#x2F;contrib&#x2F;start-scripts**下，将<code>linux</code>文件复制到 <code>/etc/init.d/pgsql</code>下，更改数据库和启动脚本所属用户和用户组为<code>postgres</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure><p>添加如下配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PGDATA=/usr/local/pgsql/data</span><br><span class="line">export PGDATA</span><br><span class="line">PGHOME=/usr/local/pgsql</span><br><span class="line">export PGHOME</span><br><span class="line">PATH=$PATH:$PGHOME/bin:$PGDATA</span><br><span class="line">export PATH PGDATA</span><br></pre></td></tr></table></figure><p>路径位置根据实际安装路径配置，预编译指定了<code>--prefix=/usr/local/pgsql</code>安装路径。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h5 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su postgres</span><br><span class="line">initdb</span><br></pre></td></tr></table></figure><p>以上<code>postgresql</code>安装完成</p><h3 id="编译安装postgis"><a href="#编译安装postgis" class="headerlink" title="编译安装postgis"></a>编译安装postgis</h3><p>安装postgis前需要安装需要的依赖</p><ul><li><code>PostgreSQL</code>  ——  <code>PostGIS</code>构建于<code>PostgreSQL</code>之上，所以<code>PostgreSQL</code>必须要安装。</li><li><code>GNU Make</code>（<code>gmake</code>或<code>make</code>）——  这个也是用于编译源码。</li><li><code>Proj4</code>  ——  <code>Proj4</code> 重投影库用于在<code>PostGIS</code>中提供坐标重投影功能。</li><li><code>GEOS</code>  ——  <code>GEOS</code>几何图形库，用于支持<code>PostGIS</code>中的几何信息处理、分析等功能，也可以直接认为<code>GEOS</code>是一个几何算法库。</li><li><code>LibXML2</code>  ——  <code>LibXML2</code>目前用于<code>PostGIS</code>中的一些导入函数，比如<code>ST_GeomFromGML()</code>和<code>ST_GeomFromKML()</code>。</li><li><code>JSON-C</code>  ——  目前使用<code>JSON-C</code>通过<code>ST_GeomFromGeoJSON()</code>函数导入<code>GeoJSON</code>格式的数据</li><li><code>GDAL</code>  ——  用于<code>PostGIS</code>对栅格数据的支持。</li></ul><ul><li><code>SFCGAL</code>  ——  用于提供额外的二维和三维的高级分析功能。允许对一些函数使用基于SFCGAL的实现，而不是使用基于GEOS的实现（例如ST_Intersection()和ST_Area()函数）</li><li><code>protobuf</code>和<code>protobuf-c</code></li></ul><h4 id="cmake安装"><a href="#cmake安装" class="headerlink" title="cmake安装"></a><code>cmake</code>安装</h4><p>解压<code>cmake-3.9.0-rc2-Linux-x86_64.tar.gz</code>重命名为<code>cmake</code>，路径为<code>/usr/local/cmake</code>，配置对应的环境变量。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CMAKE_HOME=/usr/local/cmake</span><br><span class="line">PATH=$PATH:$CMAKE_HOME/bin</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure><blockquote><p>编译安装</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./boostrap</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看cmake版本</span></span><br><span class="line">cmake -version</span><br></pre></td></tr></table></figure><h4 id="geos安装"><a href="#geos安装" class="headerlink" title="geos安装"></a>geos安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">解压源码</span></span><br><span class="line">tar jxf geos-3.8.0.tar.bz2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入编译目录</span></span><br><span class="line">cd geos-3.8.0/src</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译安装</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="proj4安装"><a href="#proj4安装" class="headerlink" title="proj4安装"></a>proj4安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxf proj-4.9.3.tar.gz </span><br><span class="line">cd proj-4.9.3/</span><br><span class="line">./configure </span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="json-c-安装"><a href="#json-c-安装" class="headerlink" title="json-c 安装"></a>json-c 安装</h4><p>编译安装前，需要安装json-c的两个强依赖包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh  json-c-devel-0.11-4.el7_0.x86_64.rpm</span><br><span class="line">rpm -ivh  json-c-0.11-4.el7_0.x86_64.rpm</span><br></pre></td></tr></table></figure><p>若出现依赖问题，使用<code>--nodeps --force</code>强制安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压源码</span></span><br><span class="line">unzip mirrors-json-c-master.zip </span><br><span class="line">cd json-c/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建编译目录</span></span><br><span class="line">mkdir build</span><br><span class="line">cd build/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译安装</span></span><br><span class="line">cmake ../</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="libxml2安装"><a href="#libxml2安装" class="headerlink" title="libxml2安装"></a>libxml2安装</h4><p>下载libxml2对应的rpm包，强制安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh libxml2-2.9.1-6.el7_2.3.x86_64.rpm</span><br><span class="line">rpm -ivh libxml2-devel-2.9.1-6.el7_2.3.x86_64.rpm</span><br><span class="line">rpm -ivh libxml2-static-2.9.1-6.el7_2.3.x86_64.rpm</span><br></pre></td></tr></table></figure><h4 id="protobuf和protobuf-c安装"><a href="#protobuf和protobuf-c安装" class="headerlink" title="protobuf和protobuf-c安装"></a><code>protobuf</code>和<code>protobuf-c</code>安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf protobuf-2.6.1.tar.gz</span><br><span class="line">cd protobuf-2.6.1</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>安装完成后，修改 &#x2F;etc&#x2F;profile，配置protobuf的路径。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PROTOBUF_HOME=/usr/local/protobuf</span><br><span class="line">export PKG_CONFIG_PATH=/usr/local/protobuf/lib/pkgconfig</span><br></pre></td></tr></table></figure><p>source &#x2F;etc&#x2F;profile 使配置生效。</p><blockquote><p>安装<code>protobuf-c</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf protobuf-c-1.3.1.tar.gz</span><br><span class="line">cd protobuf-c-1.3.1</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="SFCGAL安装"><a href="#SFCGAL安装" class="headerlink" title="SFCGAL安装"></a>SFCGAL安装</h4><p>安装<code>sfcgal</code>需要依赖<code>boost</code>、<code>cgal</code>、<code>mpfr</code>、<code>gmp</code>。</p><p>将<code>boost</code>、<code>mpfr</code>、<code>gmp</code>所需要的rpm包都放在同一个文件夹内</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gmp-6.0.0-15.el7.x86_64</span><br><span class="line">gmp-devel-6.0.0-15.el7.x86_64</span><br><span class="line">mpfr-3.1.1-4.el7.x86_64</span><br><span class="line">mpfr-devel-3.1.1-4.el7.x86_64</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># boost 下的所有包</span></span></span><br><span class="line">boost-1.53.0-27.el7.x86_64</span><br><span class="line">boost-chrono-1.53.0-27.el7.x86_64</span><br><span class="line">boost-devel-1.53.0-27.el7.x86_64</span><br></pre></td></tr></table></figure><p><code>rpm  -ivh  *.rpm --nodeps --force</code>安装该目录下的所有依赖。</p><blockquote><p><code>cgal</code>编译安装</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd cgal-releases-CGAL-4.13/</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ../</span><br><span class="line">make &amp;&amp;make install</span><br></pre></td></tr></table></figure><blockquote><p><code>sfcgal</code>安装</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd SFCGAL-1.3.6/</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr/local/sfcgal  ../</span><br><span class="line">make &amp;&amp;make install</span><br></pre></td></tr></table></figure><p>需要指定<code>sfcgal</code>的安装路径</p><h4 id="gdal安装"><a href="#gdal安装" class="headerlink" title="gdal安装"></a>gdal安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar xf gdal-2.1.3.tar.xz</span><br><span class="line">cd gdal-2.1.3/</span><br><span class="line">./configure --prefix=/usr/local/gdal</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>需要指定编译路径，方便postgis预编译查询依赖。</p><h4 id="postgis安装"><a href="#postgis安装" class="headerlink" title="postgis安装"></a>postgis安装</h4><p>预编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/postgis \</span><br><span class="line"> --with-gdalconfig=/usr/local/gdal/bin/gdal-config \</span><br><span class="line"> --with-pgconfig=/usr/local/pgsql/bin/pg_config  \</span><br><span class="line"> --with-protobufdir=/usr/local/protobuf-c \</span><br><span class="line"> --with-sfcgal=/usr/local/sfcgal/bin/sfcgal-config</span><br></pre></td></tr></table></figure><p>没有问题的话，<code>make &amp;&amp; make install</code></p>]]></content>
      
      
      <categories>
          
          <category> Postgresql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译 </tag>
            
            <tag> 二进制 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot starter</title>
      <link href="/2023/02/17/springboot%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%AF%E5%8A%A8%E5%99%A8/"/>
      <url>/2023/02/17/springboot%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%AF%E5%8A%A8%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Starter的定义"><a href="#Starter的定义" class="headerlink" title="Starter的定义"></a>Starter的定义</h2><p>Starter是一种对依赖的合成</p><p>在没有Starter之前，Spring使用jpa的操作</p><ol><li>Maven引入数据库和Jpa的依赖</li><li>在xml钟配置属性信息</li><li>调试直到运行成功。</li></ol><p>每次新建一个Jpa项目都需要重复上述操作。这样配置的时候浪费时间，过程繁琐的话每一步操作都会提高错误率。</p><h3 id="使用Starter"><a href="#使用Starter" class="headerlink" title="使用Starter"></a>使用Starter</h3><blockquote><p>starter的主要目的是为了解决上面的效率问题。</p></blockquote><h4 id="Starter用途理念"><a href="#Starter用途理念" class="headerlink" title="Starter用途理念"></a>Starter用途理念</h4><p>starter把所有用到的依赖都给包含进去，避免开发者自己去引入依赖带来的麻烦。不同的starter内部实现有很大的差异，因为都是为了解决不同的依赖。</p><h4 id="Starter的实现"><a href="#Starter的实现" class="headerlink" title="Starter的实现"></a>Starter的实现</h4><p>starter使用到的相同内容：<code>CnfigurationProperties</code>和<code>AutoConfiguration</code>。</p><p><code>CnfigurationProperties</code>保存配置信息，<code>AutoConfiguration</code>使用其中保存的配置信息和配置依赖需要用到的jar。</p><h4 id="Starter的作用"><a href="#Starter的作用" class="headerlink" title="Starter的作用"></a>Starter的作用</h4><p>帮助用户简化了配置的操作。可以给一个组件创建一个starter来让用户在使用这个组件的时候更加简单方便。</p><h4 id="如何编写自动配置"><a href="#如何编写自动配置" class="headerlink" title="如何编写自动配置"></a>如何编写自动配置</h4><blockquote><p>规则 自定义自动配置类的注解</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@Configuration //指定这个类是一个配置类</span><br><span class="line">@ConditionalOnXXX //在指定条件成立的情况下自动配置类生效</span><br><span class="line">@AutoConfigureAfter //指定自动配置类的顺序</span><br><span class="line">@Bean //给容器中添加组件</span><br><span class="line">@ConfigurationPropertie//结合相关xxxProperties类来绑定相关的配置</span><br></pre></td></tr></table></figure><blockquote><p>将需要启动就加载的自动配置类，配置在META-INF&#x2F;spring.factories下</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\</span><br><span class="line">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\</span><br></pre></td></tr></table></figure><blockquote><p>模式</p></blockquote><p><code>Starter</code>启动器只用来做依赖注入，写一个自动配置模块，启动器依赖自动配置。别人使用时只需要引入启动器即可，一般自定义启动器名为：<code>xxx-spring-boot-starter</code></p><blockquote><p>启动器</p></blockquote><p>启动器模块是一个空JAR文件，仅提供辅助性依赖管理，这些依赖可能用于自动装配或者其他类库。</p><h4 id="自定义Starter"><a href="#自定义Starter" class="headerlink" title="自定义Starter"></a>自定义<code>Starter</code></h4><ol><li>创建一个<code>starter</code>项目</li><li>创建一个<code>ConfigurationProperties</code>保存配置信息（项目不使用配置信息可跳过，大部分都需要）</li><li>创建一个<code>AutoConfiguration</code>，引用定义好的配置信息；在<code>AutoConfiguration</code>钟实现<code>starter</code>应该完成的操作，把这个类加入spring.factories配置文件中进行声明</li><li>打包项目，在一个Springboot项目中引入该项目依赖，就可以使用该starter了。</li></ol><h5 id="创建autoconfiguration项目"><a href="#创建autoconfiguration项目" class="headerlink" title="创建autoconfiguration项目"></a>创建<code>autoconfiguration</code>项目</h5><ul><li>导入POM</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient-spring-boot-autoconfiguration<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpcore<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-codec<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>META-INF/*<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Properties类</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动获取配置文件中前缀为httprequest的属性，把值传入对象参数</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;httprequest&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpRequestProperties</span> &#123;</span><br><span class="line"><span class="comment">//是否启动</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> enabled;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEnabled</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> enabled;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEnabled</span><span class="params">(<span class="type">boolean</span> enabled)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.enabled = enabled;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpRequestClient</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送POST请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url  请求url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 请求数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;deprecation&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost</span><span class="params">(String url, String data)</span> &#123;</span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line">        <span class="type">RequestConfig</span> <span class="variable">requestConfig</span> <span class="operator">=</span> RequestConfig.custom()</span><br><span class="line">                .setSocketTimeout(<span class="number">10000</span>).setConnectTimeout(<span class="number">20000</span>)</span><br><span class="line">                .setConnectionRequestTimeout(<span class="number">10000</span>).build();</span><br><span class="line">        httpPost.setConfig(requestConfig);</span><br><span class="line">        <span class="type">String</span> <span class="variable">context</span> <span class="operator">=</span> StringUtils.EMPTY;</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(data)) &#123;</span><br><span class="line">            <span class="type">StringEntity</span> <span class="variable">body</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringEntity</span>(data, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            httpPost.setEntity(body);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置回调接口接收的消息头</span></span><br><span class="line">        httpPost.addHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            response = httpClient.execute(httpPost);</span><br><span class="line">            <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">            context = EntityUtils.toString(entity, HTTP.UTF_8);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.getStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                response.close();</span><br><span class="line">                httpPost.abort();</span><br><span class="line">                httpClient.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.getStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解析出url参数中的键值对</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url url参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 键值对</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title function_">getRequestParam</span><span class="params">(String url)</span> &#123;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">        String[] arrSplit = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 每个键值为一组</span></span><br><span class="line">        arrSplit = url.split(<span class="string">&quot;[&amp;]&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String strSplit : arrSplit) &#123;</span><br><span class="line">            String[] arrSplitEqual = <span class="literal">null</span>;</span><br><span class="line">            arrSplitEqual = strSplit.split(<span class="string">&quot;[=]&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 解析出键值</span></span><br><span class="line">            <span class="keyword">if</span> (arrSplitEqual.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// 正确解析</span></span><br><span class="line">                map.put(arrSplitEqual[<span class="number">0</span>], arrSplitEqual[<span class="number">1</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (arrSplitEqual[<span class="number">0</span>] != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    map.put(arrSplitEqual[<span class="number">0</span>], <span class="string">&quot;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>自动配置类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(HttpRequestProperties.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpAutoConfiguration</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在Spring上下文中创建一个对象</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="comment">//只有当httprequest.enabled=true时才创建对象</span></span><br><span class="line">    <span class="meta">@ConditionalOnProperty(prefix = &quot;httprequest&quot;, name = &quot;enabled&quot;, havingValue = &quot;true&quot;)</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean(HttpRequestClient.class)</span></span><br><span class="line">    <span class="keyword">public</span> HttpRequestClient <span class="title function_">getHttpRequestClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HttpRequestClient</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在resources目录下添加META-INF路径，创建<code>spring.factories</code>文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration=com.example.httpclientspringbootautoconfiguration.HttpAutoConfiguration</span><br></pre></td></tr></table></figure><p>配置<code>HttpAutoConfiguration</code>自动配置类的信息，配置完成后maven打包（clean、install）</p><blockquote><p>注意：configuration只保存自定义的配置信息，不需要spring启动类、application配置文件、test测试类。</p></blockquote><h5 id="创建Starter"><a href="#创建Starter" class="headerlink" title="创建Starter"></a>创建Starter</h5><p>该项目只导入configuration项目依赖，提供xxx-springboot-starter依赖给用户使用。</p><ul><li>pom.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>httpclient-springboot-starter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient-springboot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient-spring-boot-autoconfiguration<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="创建项目测试Starter"><a href="#创建项目测试Starter" class="headerlink" title="创建项目测试Starter"></a>创建项目测试Starter</h4><ul><li>pom.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>http-auto-config-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>http-auto-config-test<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--引入自定义的starter--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>httpclient-springboot-starter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient-springboot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置信息</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">httprequest.enabled</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><ul><li>启动类和测试类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpAutoConfigTestApplication</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">SpringApplication.run(HttpAutoConfigTestApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HttpAutoConfigTestApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> HttpRequestClient httpRequestClient;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> httpRequestClient.doPost(<span class="string">&quot;http://www.baidu.com&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只有当设置httprequest.enabled&#x3D;true时启动项目会创建httpRequestClient对象</p><p>当设置httprequest.enabled&#x3D;false时</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java8新特性流</title>
      <link href="/2023/02/17/Stream%E6%B5%81%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%E5%92%8Csort%E6%8E%92%E5%BA%8F/"/>
      <url>/2023/02/17/Stream%E6%B5%81%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%E5%92%8Csort%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="Sort排序"><a href="#Sort排序" class="headerlink" title="Sort排序"></a>Sort排序</h3><h4 id="1、Pageable实现单属性排序"><a href="#1、Pageable实现单属性排序" class="headerlink" title="1、Pageable实现单属性排序"></a>1、Pageable实现单属性排序</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Sort</span> <span class="variable">sort</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sort</span>(Direction.ASC, <span class="string">&quot;seqNum&quot;</span>);</span><br><span class="line"><span class="type">Pageable</span> <span class="variable">pageable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageRequest</span>(pageNum, pageSize, sort);</span><br></pre></td></tr></table></figure><blockquote><p>Sort第一个参数表示查询结果以asc升序排序或者是desc降序排序，第二个参数表示根据该”seqNum”字段排序。</p><p>PageRequest构造方法传入pageNum,pageSize,sort。</p></blockquote><h4 id="2、多属性排序"><a href="#2、多属性排序" class="headerlink" title="2、多属性排序"></a>2、多属性排序</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sort.<span class="type">Order</span> <span class="variable">order1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sort</span>.Order(Sort.Direction.ASC, <span class="string">&quot;authStatus&quot;</span>);</span><br><span class="line">Sort.<span class="type">Order</span> <span class="variable">order2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sort</span>.Order(Sort.Direction.DESC, <span class="string">&quot;createTime&quot;</span>);</span><br><span class="line">List&lt;Sort.Order&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">list.add(order1);</span><br><span class="line">list.add(order2);</span><br><span class="line"><span class="type">Sort</span> <span class="variable">sort</span> <span class="operator">=</span>  <span class="keyword">new</span> <span class="title class_">Sort</span>(list);</span><br><span class="line"><span class="type">Pageable</span> <span class="variable">pageable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageRequest</span>(page, pageSize, sort);</span><br></pre></td></tr></table></figure><h4 id="3、new-Sort爆红和PageRequest构造方法过时"><a href="#3、new-Sort爆红和PageRequest构造方法过时" class="headerlink" title="3、new Sort爆红和PageRequest构造方法过时"></a>3、new Sort爆红和PageRequest构造方法过时</h4><p>springboot最新版本不支持Sort构造方法写入，Sort的构造器私有了private。调用<code>Sort.by()</code>方法创建Sort</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Sort</span> <span class="variable">sort</span> <span class="operator">=</span>Sort.by(Direction.ASC, <span class="string">&quot;seqNum&quot;</span>);</span><br></pre></td></tr></table></figure><p>PageRequest构造方法过时，调用PageRequest.of方法创建新的pageable。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Pageable</span> <span class="variable">pageable</span> <span class="operator">=</span> PageRequest.of(page, pageSize, sort);</span><br></pre></td></tr></table></figure><h3 id="SerializerFeature枚举类"><a href="#SerializerFeature枚举类" class="headerlink" title="SerializerFeature枚举类"></a>SerializerFeature枚举类</h3><p>SerializerFeature规定了实体对象转换位json数据的一些格式化输出要求。</p><table><thead><tr><th>枚举类型</th><th>含义</th></tr></thead><tbody><tr><td>UseSingleQuotes</td><td>使用单引号而不是双引号,默认为false</td></tr><tr><td>WriteNullStringAsEmpty</td><td>字符类型字段如果为null,输出为””,而非null</td></tr><tr><td>WriteMapNullValue</td><td>是否输出值为null的字段,默认为false</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一个参数为需要转换为JSON的对象类，第二个参数为SerializerFeature的参数设置，对word中的数据进行枚举处理。</span></span><br><span class="line">JSONObject.toJSONString(word, SerializerFeature.UseSingleQuotes);</span><br><span class="line">JSONObject.toJSONString(word, SerializerFeature.WriteNullStringAsEmpty);</span><br><span class="line">JSONObject.toJSONString(word, SerializerFeature.WriteMapNullValue);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Stream流"><a href="#Stream流" class="headerlink" title="Stream流"></a>Stream流</h3><p>Stream流将要处理的元素看作一种流，在流的过程中，对流中的元素进行操作。</p><h4 id="Stream特性"><a href="#Stream特性" class="headerlink" title="Stream特性"></a>Stream特性</h4><p>对流的操作分为两种</p><ol><li>中间操作，每次返回一个新的流。</li><li>终端操作，每个流只能进行一次终端操作，终端操作结束后流无法再次使用。</li></ol><p>特性</p><ol><li>stream不存储数据，按照规则对数据进行计算。</li><li>不改变数据源，一般情况产生新的集合或值。</li><li>具有延迟执行特性。</li></ol><h4 id="Stream流的创建"><a href="#Stream流的创建" class="headerlink" title="Stream流的创建"></a>Stream流的创建</h4><p>stream流可以由数组或集合创建</p><ul><li>数组</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] array=&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>&#125;;</span><br><span class="line"><span class="type">IntStream</span> <span class="variable">stream</span> <span class="operator">=</span> Arrays.stream(array);</span><br></pre></td></tr></table></figure><ul><li>集合</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line"><span class="comment">// 创建一个顺序流</span></span><br><span class="line">Stream&lt;String&gt; stream = list.stream();</span><br><span class="line"><span class="comment">// 创建一个并行流</span></span><br><span class="line">Stream&lt;String&gt; parallelStream = list.parallelStream();</span><br></pre></td></tr></table></figure><p>其次可以使用stream的静态方法：<code>of()、interate()、generate()</code>创建流。</p><p><code>stream</code>和<code>parallelStream</code>区分：<code>stream</code>是顺序流，由主线程按顺序对流执行操作；<code>parrallelStream</code>是并行流，内部以多线程并行执行的方式对流进行操作（流中的数据处理没有顺序要求）。</p><h4 id="Stream使用"><a href="#Stream使用" class="headerlink" title="Stream使用"></a>Stream使用</h4><blockquote><p>Optional</p></blockquote><p>Optional类是一个可以为null的容器对象，值存在则<code>isPrensent()</code>返回<code>true</code>。</p><h5 id="遍历、匹配-foreach-x2F-find-x2F-match-和筛选-filter"><a href="#遍历、匹配-foreach-x2F-find-x2F-match-和筛选-filter" class="headerlink" title="遍历、匹配(foreach&#x2F;find&#x2F;match) 和筛选(filter)"></a>遍历、匹配(foreach&#x2F;find&#x2F;match) 和筛选(filter)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Arrays.asList(<span class="number">7</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">// 遍历输出符合条件的元素</span></span><br><span class="line">list.stream().filter(x -&gt; x &gt; <span class="number">6</span>).forEach(System.out::println);</span><br><span class="line"><span class="comment">// 匹配第一个</span></span><br><span class="line">Optional&lt;Integer&gt; findFirst = list.stream().filter(x -&gt; x &gt; <span class="number">6</span>).findFirst();</span><br><span class="line"><span class="comment">// 匹配任意（适用于并行流）</span></span><br><span class="line">Optional&lt;Integer&gt; findAny = list.parallelStream().filter(x -&gt; x &gt; <span class="number">6</span>).findAny();</span><br><span class="line"><span class="comment">// 是否包含符合特定条件的元素</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">anyMatch</span> <span class="operator">=</span> list.stream().anyMatch(x -&gt; x &gt; <span class="number">6</span>);</span><br></pre></td></tr></table></figure><p><code>filter()</code>过滤流中元素大于6的值，<code>findFirst()</code>匹配到第一个大于6的元素，<code>findAny()</code>随机匹配流中大于6的元素，<code>anyMatch()</code>判断流中是否存在大于6的元素。</p><h5 id="聚合-max-x2F-min-x2F-count"><a href="#聚合-max-x2F-min-x2F-count" class="headerlink" title="聚合(max&#x2F;min&#x2F;count)"></a>聚合(max&#x2F;min&#x2F;count)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;adnm&quot;</span>, <span class="string">&quot;admmt&quot;</span>, <span class="string">&quot;pot&quot;</span>, <span class="string">&quot;xbangd&quot;</span>, <span class="string">&quot;weoujgsd&quot;</span>);</span><br><span class="line">Optional&lt;String&gt; max = list.stream().max(Comparator.comparing(String::length));</span><br><span class="line">Optional&lt;String&gt; min = list.stream().min(Comparator.comparing(String::length));</span><br><span class="line"><span class="type">long</span> <span class="variable">count</span> <span class="operator">=</span> list.stream().distinct().count();</span><br><span class="line">System.out.println(<span class="string">&quot;最长的字符串：&quot;</span> + max.get());</span><br><span class="line">System.out.println(<span class="string">&quot;最短的字符串：&quot;</span> + min.get());</span><br><span class="line">System.out.println(<span class="string">&quot;字符串的个数：&quot;</span> + count);</span><br></pre></td></tr></table></figure><p>在<code>max()和min()</code>方法中传入比较器<code>Comparator</code>获取当前比较结果的<code>max和min</code>值。<code>distinct()</code>方法用于除去流中重复的元素。</p><h5 id="映射-map-x2F-flatMap"><a href="#映射-map-x2F-flatMap" class="headerlink" title="映射(map&#x2F;flatMap)"></a>映射(map&#x2F;flatMap)</h5><p>映射可以将一个流的元素按照一定的规则映射到另一个流中。分为<code>map</code>和<code>flatMap</code>：</p><ol><li><code>map：</code>将接收的函数作为参数，应用到每一个元素上，并映射成一个新的元素。</li><li><code>flatMap：</code>接收一个函数作为参数，将流中的每个值都换成另一个流，然后连接所有流成为一个流。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String[] strArr = &#123; <span class="string">&quot;abcd&quot;</span>, <span class="string">&quot;bcdd&quot;</span>, <span class="string">&quot;defde&quot;</span>, <span class="string">&quot;fTr&quot;</span> &#125;;</span><br><span class="line">List&lt;String&gt; strList = Arrays.stream(strArr).map(String::toUpperCase).collect(Collectors.toList());</span><br></pre></td></tr></table></figure><p><code>map()</code>传入<code>String.toUpperCase()</code>方法将流中的元素替换为大写，<code>collect()</code>传入<code>Collectors.toList()</code>方法将流转换为list集合存储。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;m,k,l,a&quot;</span>, <span class="string">&quot;1,3,5,7&quot;</span>);</span><br><span class="line">List&lt;String&gt; listNew = list.stream().flatMap(s -&gt; &#123;</span><br><span class="line">    <span class="comment">// 将每个元素转换成一个stream</span></span><br><span class="line">    String[] split = s.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    Stream&lt;String&gt; s2 = Arrays.stream(split);</span><br><span class="line">    <span class="keyword">return</span> s2;</span><br><span class="line">&#125;).collect(Collectors.toList());</span><br></pre></td></tr></table></figure><p><code>flatMap()</code>将流中每一个元素转换成stream然后连接成同一个流返回。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stream </tag>
            
            <tag> sort </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql语句构造geojson</title>
      <link href="/2023/02/17/SQL%E6%9E%84%E9%80%A0Geojson/"/>
      <url>/2023/02/17/SQL%E6%9E%84%E9%80%A0Geojson/</url>
      
        <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><ol><li><p>数据库存在两张表，一张包含对象的基本属性信息（简称A表），一张包含对象的空间结构信息（简称B表）</p></li><li><p>数据库仅存在一张表包含对象的属性信息和空间信息。</p></li></ol><h3 id="构造Geojson"><a href="#构造Geojson" class="headerlink" title="构造Geojson"></a>构造<code>Geojson</code></h3><p>以情况1为例，提取数据库中需要保存的属性信息和空间信息，通过<code>with as</code>查询连接两张表，使用<code>json</code>函数将结果转换为<code>json</code>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 从表A中提取需要存储的数据信息构建</span></span><br><span class="line"><span class="keyword">WITH</span> A <span class="keyword">AS</span> (<span class="keyword">select</span> column_name <span class="keyword">as</span> xxx , ... , column_name <span class="keyword">as</span> xxx ) <span class="keyword">from</span> table_name</span><br><span class="line"><span class="comment">-- 从表B中提取空间属性信息构造</span></span><br><span class="line"><span class="keyword">WITH</span> B <span class="keyword">as</span>(<span class="keyword">SELECT</span> column_name <span class="keyword">as</span> xxx , ... , column_name <span class="keyword">as</span> xxx  <span class="keyword">from</span> &quot;parameter&quot; )</span><br><span class="line"><span class="comment">-- 连接表A和表B，natural链接自动省略重复字段</span></span><br><span class="line"><span class="keyword">WITH</span> C <span class="keyword">as</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> A <span class="keyword">NATURAL</span> <span class="keyword">inner</span> <span class="keyword">join</span> B)</span><br><span class="line"><span class="comment">-- 至此已完全构造完geojson所需的数据属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看提取出来的表结构信息</span></span><br><span class="line"><span class="keyword">WITH</span> A <span class="keyword">AS</span> (<span class="keyword">select</span> column_name <span class="keyword">as</span> xxx , ... , column_name <span class="keyword">as</span> xxx ) <span class="keyword">from</span> table_name,</span><br><span class="line"> B <span class="keyword">as</span>(<span class="keyword">SELECT</span> column_name <span class="keyword">as</span> xxx , ... , column_name <span class="keyword">as</span> xxx  <span class="keyword">from</span> &quot;parameter&quot; ),</span><br><span class="line"> C <span class="keyword">as</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> A <span class="keyword">NATURAL</span> <span class="keyword">inner</span> <span class="keyword">join</span> B)</span><br><span class="line"> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> C</span><br></pre></td></tr></table></figure><p>已构造<code>Featurecollection</code>文件为例，包含两个特定字段<code>type:&quot;Featurecollection&quot;</code>、<code>feature:&#123;&#125;</code>，<code>feature</code>中包含<code>type</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;FeatureCollection&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;features&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;Feature&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="number">3865207830</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="string">&quot;polygon.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;geometry&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;Polygon&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;coordinates&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">                    <span class="punctuation">[</span></span><br><span class="line">                        <span class="punctuation">[</span></span><br><span class="line">                            <span class="number">116.19827270507814</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="number">39.78321267821705</span></span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="punctuation">[</span></span><br><span class="line">                            <span class="number">116.04446411132814</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="number">39.232253141714914</span></span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="punctuation">[</span></span><br><span class="line">                            <span class="number">116.89590454101562</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="number">39.3831409542565</span></span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="punctuation">[</span></span><br><span class="line">                            <span class="number">116.86981201171876</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="number">39.918162846609455</span></span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="punctuation">[</span></span><br><span class="line">                            <span class="number">116.19827270507814</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="number">39.78321267821705</span></span><br><span class="line">                        <span class="punctuation">]</span></span><br><span class="line">                    <span class="punctuation">]</span></span><br><span class="line">                <span class="punctuation">]</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 从表C中构造feature</span></span><br><span class="line"><span class="keyword">WITH</span> feature <span class="keyword">as</span>(<span class="keyword">select</span> <span class="string">&#x27;Feature&#x27;</span> <span class="keyword">as</span> type, geometrty,xxx <span class="keyword">as</span> properties) <span class="keyword">from</span> C</span><br><span class="line"><span class="comment">-- 从feature中构造最后的featurecollection文件</span></span><br><span class="line"><span class="keyword">WITH</span> features <span class="keyword">as</span>(<span class="keyword">select</span> <span class="string">&#x27;FeatureCollection&#x27;</span> <span class="keyword">as</span> type, array_to_json(<span class="built_in">array_agg</span>(feature.<span class="operator">*</span>)) <span class="keyword">as</span> features <span class="keyword">from</span> feature)</span><br><span class="line">     <span class="keyword">SELECT</span> row_to_json(features.<span class="operator">*</span>) <span class="keyword">from</span> features</span><br></pre></td></tr></table></figure><ol start="3"><li>完整构造<code>Geojson</code></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> A <span class="keyword">as</span>(<span class="keyword">SELECT</span> ecgi, azimuth,antenna_hanging_high, st_asgeojson(geometry)::json  <span class="keyword">as</span>  geometry <span class="keyword">from</span> parameter_geometry)</span><br><span class="line">     B <span class="keyword">as</span>(<span class="keyword">SELECT</span> cell_name,ecgi,azimuth,antenna_hanging_high <span class="keyword">from</span> &quot;parameter&quot; ),</span><br><span class="line">     C <span class="keyword">as</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> A <span class="keyword">NATURAL</span> <span class="keyword">inner</span> <span class="keyword">join</span> B ),</span><br><span class="line">     feature <span class="keyword">as</span>(<span class="keyword">SELECT</span> <span class="string">&#x27;Feature&#x27;</span> <span class="keyword">as</span> type, geometry,(<span class="keyword">SELECT</span> json_strip_nulls(row_to_json(fields)) <span class="keyword">from</span> (<span class="keyword">select</span> cell_name,azimuth,antenna_hanging_high) <span class="keyword">as</span> fields)  <span class="keyword">as</span> properties <span class="keyword">from</span> C),</span><br><span class="line">     features <span class="keyword">as</span>(<span class="keyword">select</span> <span class="string">&#x27;FeatureCollection&#x27;</span> <span class="keyword">as</span> type, array_to_json(<span class="built_in">array_agg</span>(feature.<span class="operator">*</span>)) <span class="keyword">as</span> features <span class="keyword">from</span> feature)</span><br><span class="line">     <span class="keyword">SELECT</span> row_to_json(features.<span class="operator">*</span>) <span class="keyword">from</span> features</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Postgresql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> geojson </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GeoTools操作矢量数据</title>
      <link href="/2023/02/17/GIS%E5%85%A5%E9%97%A8/"/>
      <url>/2023/02/17/GIS%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="GeoTools"><a href="#GeoTools" class="headerlink" title="GeoTools"></a>GeoTools</h2><ul><li>主要提供<code>GIS</code>算法，实现各种数据格式大的读写和显示。</li><li>构建在<code>OGC</code>标准之上，用到的比较重要的开源<code>GIS</code>工具包是<code>JTS</code></li></ul><h2 id="GeoTools加载shp文件"><a href="#GeoTools加载shp文件" class="headerlink" title="GeoTools加载shp文件"></a>GeoTools加载shp文件</h2><h3 id="依赖导入"><a href="#依赖导入" class="headerlink" title="依赖导入"></a>依赖导入</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-geojson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;geotools.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-shapefile<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;geotools.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-swing<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;geotools.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-epsg-hsql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;geotools.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="从本地文件中获取shp数据源"><a href="#从本地文件中获取shp数据源" class="headerlink" title="从本地文件中获取shp数据源"></a>从本地文件中获取shp数据源</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Quickstart</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 选择一个shp文件</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> JFileDataStoreChooser.showOpenFile(<span class="string">&quot;shp&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//加载shp图层数据源</span></span><br><span class="line">        <span class="type">FileDataStore</span> <span class="variable">store</span> <span class="operator">=</span> FileDataStoreFinder.getDataStore(file);</span><br><span class="line">        <span class="type">SimpleFeatureSource</span> <span class="variable">featureSource</span> <span class="operator">=</span> store.getFeatureSource();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个地图容器</span></span><br><span class="line">        <span class="type">MapContent</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MapContent</span>();</span><br><span class="line">        map.setTitle(<span class="string">&quot;Quickstart&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个简单的样式，并将样式和shp数据源加载到一个图层上</span></span><br><span class="line">        <span class="type">Style</span> <span class="variable">style</span> <span class="operator">=</span> SLD.createSimpleStyle(featureSource.getSchema());</span><br><span class="line">        <span class="type">Layer</span> <span class="variable">layer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FeatureLayer</span>(featureSource, style);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在地图容器添加图层</span></span><br><span class="line">        map.addLayer(layer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 展示地图</span></span><br><span class="line">        JMapFrame.showMap(map);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Swing</code>选择打开<code>shp</code>文件，<code>FileDataStoreFinder</code>获得<code>file</code>对象的数据源，从数据源中获得<code>要素类型</code>。</p><p><code>MapContent</code>创建一个地图容器，将特征要素和样式一同加载到图层<code>Layer</code>中，并将<code>Layer</code>添加进<code>map</code>容器展示。</p><blockquote><p>shp文件获得 -&gt; 文件要素 +SLD样式  -&gt; 生成图层<code>Layer</code>加载进地图中 -&gt; 展示</p></blockquote><h3 id="从数据源中获取shp文件"><a href="#从数据源中获取shp文件" class="headerlink" title="从数据源中获取shp文件"></a>从数据源中获取shp文件</h3><blockquote><p>导入postgis依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools.jdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-jdbc-postgis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;geotools.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>postgis连接工具类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PostGis</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过PostGis获取FeatureSource</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host      ip地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> port      端口号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> database  需要连接的数据库</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName  用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password  密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tableName 需要连接的表名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SimpleFeatureSource <span class="title function_">connAndGetFeatureSource</span><span class="params">(</span></span><br><span class="line"><span class="params">            String host, String port, String database,</span></span><br><span class="line"><span class="params">            String userName, String password, String tableName)</span> &#123;</span><br><span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;(<span class="number">8</span>);</span><br><span class="line">        <span class="comment">//需要连接何种数据库，postgis</span></span><br><span class="line">        params.put(PostgisNGDataStoreFactory.DBTYPE.key, <span class="string">&quot;postgis&quot;</span>);</span><br><span class="line">        <span class="comment">//ip地址</span></span><br><span class="line">        params.put(PostgisNGDataStoreFactory.HOST.key, host);</span><br><span class="line">        <span class="comment">//端口号</span></span><br><span class="line">        params.put(PostgisNGDataStoreFactory.PORT.key, <span class="keyword">new</span> <span class="title class_">Integer</span>(port));</span><br><span class="line">        <span class="comment">//需要连接的数据库</span></span><br><span class="line">        params.put(PostgisNGDataStoreFactory.DATABASE.key, database);</span><br><span class="line">        <span class="comment">//架构</span></span><br><span class="line">        params.put(PostgisNGDataStoreFactory.SCHEMA.key, <span class="string">&quot;public&quot;</span>);</span><br><span class="line">        <span class="comment">//需要连接数据库的名称</span></span><br><span class="line">        params.put(PostgisNGDataStoreFactory.USER.key, userName);</span><br><span class="line">        <span class="comment">//数据库的密码</span></span><br><span class="line">        params.put(PostgisNGDataStoreFactory.PASSWD.key, password);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取存储空间</span></span><br><span class="line">            <span class="type">DataStore</span> <span class="variable">pgDataStore</span> <span class="operator">=</span> DataStoreFinder.getDataStore(params);</span><br><span class="line">            <span class="comment">//根据表名获取source</span></span><br><span class="line">            <span class="keyword">return</span> pgDataStore.getFeatureSource(tableName);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>测试</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SimpleFeatureSource</span> <span class="variable">featureSource</span> <span class="operator">=</span> getFeatureSourceByPostGis();</span><br><span class="line"></span><br><span class="line">        <span class="type">MapContent</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MapContent</span>();</span><br><span class="line">        map.setTitle(<span class="string">&quot;Quickstart&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Style</span> <span class="variable">style</span> <span class="operator">=</span> SLD.createSimpleStyle(featureSource.getSchema());</span><br><span class="line">        <span class="type">Layer</span> <span class="variable">layer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FeatureLayer</span>(featureSource, style);</span><br><span class="line">        map.addLayer(layer);</span><br><span class="line">        JMapFrame.showMap(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SimpleFeatureSource <span class="title function_">getFeatureSourceByPostGis</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ip</span> <span class="operator">=</span> <span class="string">&quot;192.168.67.22&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">port</span> <span class="operator">=</span> <span class="string">&quot;5432&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">database</span> <span class="operator">=</span> <span class="string">&quot;nyc&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">userName</span> <span class="operator">=</span> <span class="string">&quot;postgres&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;12345&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">tableName</span> <span class="operator">=</span> <span class="string">&quot;ne_50m_admin_0_countries&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> PostGis.connAndGetFeatureSource(</span><br><span class="line">                ip, port, database, userName, password, tableName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将csv数据转换为shp文件"><a href="#将csv数据转换为shp文件" class="headerlink" title="将csv数据转换为shp文件"></a>将csv数据转换为shp文件</h3><blockquote><p>读取csv文件构建shp文件的流程</p></blockquote><ol><li>从csv文件中读取表头字段属性，通过<code>SimpleFeatureTypeBuilder</code>创建（更灵活）<code>shp</code>文件约束，类似于创建表的结构。</li><li></li></ol><blockquote><p>准备的csv数据样例</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">LAT, LON, CITY, NUMBER</span><br><span class="line">46.066667, 11.116667, Trento, 140</span><br><span class="line">44.9441, -93.0852, St Paul, 125</span><br><span class="line">13.752222, 100.493889, Bangkok, 150</span><br><span class="line">45.420833, -75.69, Ottawa, 200</span><br><span class="line">44.9801, -93.251867, Minneapolis, 350</span><br><span class="line">46.519833, 6.6335, Lausanne, 560</span><br><span class="line">48.428611, -123.365556, Victoria, 721</span><br><span class="line">-33.925278, 18.423889, Cape Town, 550</span><br><span class="line">-33.859972, 151.211111, Sydney, 436</span><br><span class="line">41.383333, 2.183333, Barcelona, 914</span><br><span class="line">39.739167, -104.984722, Denver, 869</span><br><span class="line">52.95, -1.133333, Nottingham, 800</span><br><span class="line">45.52, -122.681944, Portland, 840</span><br><span class="line">37.5667,129.681944,Seoul,473</span><br><span class="line">50.733992,7.099814,Bonn,700,2016</span><br></pre></td></tr></table></figure><blockquote><p>pom依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sourceforge.javacsv<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javacsv<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>创建feature要素约束</p></blockquote><p>创建<code>shp</code>文件约束有两种类型，1. 通过字符串创建。2. 通过<code>SimpleFeatureTypeBuilder</code>创建。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串创建</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> SimpleFeatureType <span class="title function_">createFeatureTypeByStr</span><span class="params">()</span> <span class="keyword">throws</span> SchemaException &#123;</span><br><span class="line">        <span class="comment">//the_geom&quot; must be of type Point, MultiPoint, MuiltiLineString, MultiPolygon</span></span><br><span class="line">        <span class="comment">//the_geom&quot; is always first, and used for the geometry attribute name</span></span><br><span class="line">        <span class="keyword">return</span> DataUtilities.createType(<span class="string">&quot;Location&quot;</span>,</span><br><span class="line">                <span class="string">&quot;the_geom:Point:srid=4326,name:String,number:Integer&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// SimpleFeatureTypeBuilder创建</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> SimpleFeatureType <span class="title function_">createFeatureType</span><span class="params">(Class&lt;? extends Geometry&gt; geometryClazz)</span> &#123;</span><br><span class="line">        <span class="type">SimpleFeatureTypeBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleFeatureTypeBuilder</span>();</span><br><span class="line">        builder.setName(<span class="string">&quot;Location&quot;</span>);</span><br><span class="line">        <span class="comment">// &lt;- Coordinate reference system</span></span><br><span class="line">        builder.setCRS(DefaultGeographicCRS.WGS84);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// add attributes in order</span></span><br><span class="line">        builder.add(<span class="string">&quot;the_geom&quot;</span>, geometryClazz);</span><br><span class="line">        <span class="comment">// &lt;- 15 chars width for name field</span></span><br><span class="line">        builder.length(<span class="number">15</span>).add(<span class="string">&quot;Name&quot;</span>, String.class);</span><br><span class="line">        builder.add(<span class="string">&quot;number&quot;</span>, Integer.class);</span><br><span class="line">        <span class="comment">// build the type</span></span><br><span class="line">        <span class="keyword">return</span> builder.buildFeatureType();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><code>builder</code>设置要素<code>typeName</code>、和<code>CRS坐标系</code>。</li><li><code>add</code>csv表头对应的字段属性，<code>the_geom</code>表示当前shp的空间要素且必须为<code>the_geom</code>，本样例为<code>Point</code>点要素。<code>city</code>字段映射为<code>name</code>，<code>numer</code>字段映射为<code>number</code>。</li></ol><blockquote><p>读取csv文件</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;SimpleFeature&gt; <span class="title function_">readCsv2Feature</span><span class="params">(SimpleFeatureType type, File file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//A list to collect features as we create them.</span></span><br><span class="line">        List&lt;SimpleFeature&gt; features = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">SimpleFeatureBuilder</span> <span class="variable">featureBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleFeatureBuilder</span>(type);</span><br><span class="line"></span><br><span class="line">        <span class="type">GeometryFactory</span> <span class="variable">geometryFactory</span> <span class="operator">=</span> JTSFactoryFinder.getGeometryFactory();</span><br><span class="line"></span><br><span class="line">        <span class="type">CsvReader</span>  <span class="variable">csvReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CsvReader</span>(file.getAbsolutePath(), <span class="string">&#x27;,&#x27;</span>, StandardCharsets.UTF_8);</span><br><span class="line">        <span class="comment">//获取表头</span></span><br><span class="line">        csvReader.readHeaders();</span><br><span class="line">        <span class="keyword">while</span> (csvReader.readRecord()) &#123;</span><br><span class="line">            <span class="type">Double</span> <span class="variable">latitude</span> <span class="operator">=</span> Double.parseDouble(csvReader.get(<span class="number">0</span>));</span><br><span class="line">            <span class="type">Double</span> <span class="variable">longitude</span> <span class="operator">=</span> Double.parseDouble(csvReader.get(<span class="number">1</span>));</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> csvReader.get(<span class="number">2</span>).trim();</span><br><span class="line">            <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> Integer.parseInt(csvReader.get(<span class="number">3</span>).trim());</span><br><span class="line"></span><br><span class="line">            <span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span> geometryFactory.createPoint(<span class="keyword">new</span> <span class="title class_">Coordinate</span>(longitude, latitude));</span><br><span class="line">            featureBuilder.add(point);</span><br><span class="line">            featureBuilder.add(name);</span><br><span class="line">            featureBuilder.add(number);</span><br><span class="line">            <span class="type">SimpleFeature</span> <span class="variable">feature</span> <span class="operator">=</span> featureBuilder.buildFeature(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">            features.add(feature);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> features;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol><li>根据<code>shp</code>要素类型构建<code>featureBuilder</code>，获取<code>csv</code>文件中的每一行数据，通过<code>featureBuilder</code>将每一行数据根据要素构建，并添加至<code>List&lt;SimpleFeature&gt;</code>中。</li><li>使用<code>JTS</code>创建一个点，<code>JTSFactoryFinder</code>获取<code>GeometryFactory</code>。<code>geometryFactory</code>根据<code>csv</code>文件中的经纬度数据创建点。</li><li><code>buildFeature</code>在每次创建<code>SimpleFeature</code>时都会对之前构建的要素<code>reset()</code>清零。</li></ol><blockquote><p>创建<code>shp</code>文件</p></blockquote><ol><li>构建<code>shp</code>文件对象</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> File <span class="title function_">getNewShapeFile</span><span class="params">(File csvFile)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> csvFile.getAbsolutePath();</span><br><span class="line">        <span class="type">String</span> <span class="variable">newPath</span> <span class="operator">=</span> path.substring(<span class="number">0</span>, path.length() - <span class="number">4</span>) + <span class="string">&quot;.shp&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">JFileDataStoreChooser</span> <span class="variable">chooser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JFileDataStoreChooser</span>(<span class="string">&quot;shp&quot;</span>);</span><br><span class="line">        chooser.setDialogTitle(<span class="string">&quot;Save shapefile&quot;</span>);</span><br><span class="line">        chooser.setSelectedFile(<span class="keyword">new</span> <span class="title class_">File</span>(newPath));</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">returnVal</span> <span class="operator">=</span> chooser.showSaveDialog(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (returnVal != JFileDataStoreChooser.APPROVE_OPTION) &#123;</span><br><span class="line">            <span class="comment">// the user cancelled the dialog</span></span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">File</span> <span class="variable">newFile</span> <span class="operator">=</span> chooser.getSelectedFile();</span><br><span class="line">        <span class="keyword">if</span> (newFile.equals(csvFile)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Error: cannot replace &quot;</span> + csvFile);</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newFile;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><p>在<code>csv</code>文件同目录下创建<code>shp</code>文件路径，<code>JFileDataStoreChooser</code>构建选择框标题和保存的文件路径。</p></li><li><p>构建<code>newFile</code>，避免<code>file</code>类型为<code>csv</code>的情况。</p></li></ul><ol start="2"><li>创建<code>shp</code>文件</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());</span><br><span class="line"></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> JFileDataStoreChooser.showOpenFile(<span class="string">&quot;csv&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Create a FeatureType</span></span><br><span class="line">        <span class="type">SimpleFeatureType</span> <span class="variable">type</span> <span class="operator">=</span> createFeatureType(Point.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将csv转换为feature</span></span><br><span class="line">        List&lt;SimpleFeature&gt; features = readCsv2Feature(type, file);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//Get an output file name and create the new shapefile</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">newFile</span> <span class="operator">=</span> getNewShapeFile(file);</span><br><span class="line"></span><br><span class="line">        <span class="type">ShapefileDataStoreFactory</span> <span class="variable">dataStoreFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShapefileDataStoreFactory</span>();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Serializable&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">2</span>);</span><br><span class="line">        params.put(<span class="string">&quot;url&quot;</span>, newFile.toURI().toURL());</span><br><span class="line">        params.put(<span class="string">&quot;create spatial index&quot;</span>, Boolean.TRUE);</span><br><span class="line"></span><br><span class="line">        <span class="type">ShapefileDataStore</span> <span class="variable">newDataStore</span> <span class="operator">=</span></span><br><span class="line">                (ShapefileDataStore) dataStoreFactory.createNewDataStore(params);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//TYPE is used as a template to describe the file contents</span></span><br><span class="line">        newDataStore.createSchema(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Write the features to the shapefile</span></span><br><span class="line">        <span class="type">Transaction</span> <span class="variable">transaction</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultTransaction</span>(<span class="string">&quot;create&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">typeName</span> <span class="operator">=</span> newDataStore.getTypeNames()[<span class="number">0</span>];</span><br><span class="line">        <span class="type">SimpleFeatureSource</span> <span class="variable">featureSource</span> <span class="operator">=</span> newDataStore.getFeatureSource(typeName);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (featureSource <span class="keyword">instanceof</span> SimpleFeatureStore) &#123;</span><br><span class="line">            <span class="type">SimpleFeatureStore</span> <span class="variable">featureStore</span> <span class="operator">=</span> (SimpleFeatureStore) featureSource;</span><br><span class="line">            <span class="type">SimpleFeatureCollection</span> <span class="variable">collection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListFeatureCollection</span>(type, features);</span><br><span class="line">            featureStore.setTransaction(transaction);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                featureStore.addFeatures(collection);</span><br><span class="line">                transaction.commit();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception problem) &#123;</span><br><span class="line">                problem.printStackTrace();</span><br><span class="line">                transaction.rollback();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                transaction.close();</span><br><span class="line">            &#125;</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(typeName + <span class="string">&quot; does not support read/write access&quot;</span>);</span><br><span class="line">            System.exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ol><li>通过<code>dataStoreFactory</code>并结合特定的参数创建<code>ShapefileDataStore</code>，设置<code>shp</code>文件的uri地址和空间地理索引。</li><li><code>newDataStore</code>创建表约束，就是表的字段属性。</li><li>通过<code>newDataStore</code>获取要素信息featureSource&#96;，开启事务。</li><li>通过要素集合的类型和要素数据创建集合<code>collection</code>，将要素集合<code>collection</code>放入featureStore。提交事务，创建<code>shp</code>文件。</li></ol><h2 id="数据类型格式"><a href="#数据类型格式" class="headerlink" title="数据类型格式"></a>数据类型格式</h2><h3 id="Shape"><a href="#Shape" class="headerlink" title="Shape"></a>Shape</h3><p>矢量图形格式，使用点、线、多边形存储要素的形状，它能够保存几何图形的位置及相关属性。（不能存储拓扑结构）</p><p>一个<code>shapefile</code>由若干个文件组成，空间信息和属性信息分离存储。</p><ul><li><code>*.shp</code>:保存元素的几何实体，存储几何要素的空间信息（XY坐标）。</li><li><code>*.shx</code>：保存几何实体的索引，存储的是有关<code>*.shp</code>存储的索引信息。</li><li><code>*.dbf</code>：数据库，保存元素的属性信息。</li></ul><p><code>GeoTools</code>加载shp文件从磁盘读取并写入磁盘，不通过内存记载。</p><h3 id="GeoJson"><a href="#GeoJson" class="headerlink" title="GeoJson"></a>GeoJson</h3><p>以<code>json</code>的语法存储地理数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FeatureCollection&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;features&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;Feature&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;geometry&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;Point&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;coordinates&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">105.380859375</span><span class="punctuation">,</span><span class="number">31.57853542647338</span><span class="punctuation">]</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><code>GeoJson</code>将所有的地理要素分为<code>Point</code>、<code>MultiPoint</code>、<code>LineString</code>、<code>MultiLineString</code>、<code>Polygon</code>、<code>MultiPolygon</code>、<code>GeometryCollection</code>。首先将这些要素封装到单个的<code>geometry</code>里，然后作为一个个的<code>Feature</code>（要素）放到<code>FeatureCollection</code>要素集合中。</p><h3 id="WKT"><a href="#WKT" class="headerlink" title="WKT"></a>WKT</h3><h3 id="数据类型之间的转换"><a href="#数据类型之间的转换" class="headerlink" title="数据类型之间的转换"></a>数据类型之间的转换</h3>]]></content>
      
      
      <categories>
          
          <category> Gis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> geoTools </tag>
            
            <tag> Shp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL存储过程</title>
      <link href="/2023/02/17/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
      <url>/2023/02/17/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>存储过程就像一个接口，可以直接调用，不需要重复编写。</p><p>与函数的对比：都是事先编译并存储再数据库中的一段<code>SQL</code>语句的集合，调用存储过程和函数可以简化开发工作。区别在于函数必须有返回值，存储过程没有。</p><blockquote><p>存储过程结构</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">delimiter ;;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> 存储过程名称(<span class="type">int</span> <span class="keyword">parameter</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">SQL</span>语句;</span><br><span class="line"><span class="keyword">end</span>;;</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><p><code>parameter</code>为传入函数的参数</p><h3 id="存储过程的基本使用"><a href="#存储过程的基本使用" class="headerlink" title="存储过程的基本使用"></a>存储过程的基本使用</h3><blockquote><p>创建测试表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> students(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    age <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    city <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">) <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students <span class="keyword">values</span>(<span class="keyword">null</span>, <span class="number">22</span>, <span class="string">&#x27;lisa&#x27;</span>, <span class="string">&#x27;杭州&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students <span class="keyword">values</span>(<span class="keyword">null</span>, <span class="number">16</span>, <span class="string">&#x27;rock&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students <span class="keyword">values</span>(<span class="keyword">null</span>, <span class="number">20</span>, <span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students <span class="keyword">values</span>(<span class="keyword">null</span>, <span class="number">21</span>, <span class="string">&#x27;rose&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>不带参数的存储过程</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询学生个数</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> if <span class="keyword">exists</span> select_students_count;</span><br><span class="line"></span><br><span class="line">delimiter ;; <span class="comment">-- 替换分隔符</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> select_students_count() </span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(id) <span class="keyword">from</span> students; </span><br><span class="line"><span class="keyword">end</span> ;;</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><p>执行存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> select_students_count();</span><br></pre></td></tr></table></figure><blockquote><p>带参数的存储过程</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 根据城市查询总数</span></span><br><span class="line">delimiter ;;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> select_students_by_city_count(<span class="keyword">in</span> _city <span class="type">varchar</span>(<span class="number">255</span>))</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(id) <span class="keyword">from</span> students <span class="keyword">where</span> city <span class="operator">=</span> _city;</span><br><span class="line"><span class="keyword">end</span>;;</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><p>执行存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> select_students_by_city_count(<span class="string">&#x27;上海&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>带有输出参数的存储过程</p></blockquote><p><code>MySQL</code>支持<code>in(传递给存储过程)</code>，<code>out(从存储过程传出)</code>和<code>inout(对存储过程传入和传出)</code>类型的参数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 根据姓名查询学生信息，返回学生的城市</span></span><br><span class="line">delimiter ;;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> select_students_by_name(</span><br><span class="line">    <span class="keyword">in</span> _name <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    <span class="keyword">out</span> _city <span class="type">varchar</span>(<span class="number">255</span>), <span class="comment">-- 输出参数</span></span><br><span class="line">    <span class="keyword">inout</span> _age <span class="type">int</span>(<span class="number">11</span>)</span><br><span class="line">)</span><br><span class="line">    <span class="keyword">begin</span> </span><br><span class="line">    <span class="keyword">select</span> city <span class="keyword">from</span> students <span class="keyword">where</span> name <span class="operator">=</span> _name <span class="keyword">and</span> age <span class="operator">=</span> _age <span class="keyword">into</span> _city;</span><br><span class="line">    <span class="keyword">end</span> ;;</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><p>执行存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @_age <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="keyword">set</span> @_name <span class="operator">=</span> <span class="string">&#x27;jack&#x27;</span>;</span><br><span class="line"><span class="keyword">call</span> select_students_by_name(@_name, @_city, @_age);</span><br><span class="line"><span class="keyword">select</span> @_city <span class="keyword">as</span> city, @_age <span class="keyword">as</span> age;</span><br></pre></td></tr></table></figure><p>带有通配符的存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">delimiter ;;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> select_students_by_likename(</span><br><span class="line">    <span class="keyword">in</span> _likename <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> students <span class="keyword">where</span> name <span class="keyword">like</span> _likename;</span><br><span class="line">    <span class="keyword">end</span> ;;</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><p>执行存储过程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">call select_students_by_likename(&#x27;%s%&#x27;);</span><br><span class="line">call select_students_by_likename(&#x27;%j%&#x27;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 存储过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>postgresql一些函数用法</title>
      <link href="/2023/02/17/Postresql%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/"/>
      <url>/2023/02/17/Postresql%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a><code>SQL</code>语句</h3><h4 id="WITH-AS"><a href="#WITH-AS" class="headerlink" title="WITH AS"></a><code>WITH AS</code></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">WITH</span> 子句有助于将复杂的大型查询分解为更简单的表单，</span><br><span class="line"><span class="keyword">WITH</span></span><br><span class="line">   name_for_summary_data <span class="keyword">AS</span> (</span><br><span class="line">      <span class="keyword">SELECT</span> Statement)</span><br><span class="line">   <span class="keyword">SELECT</span> columns</span><br><span class="line">   <span class="keyword">FROM</span> name_for_summary_data</span><br><span class="line">   <span class="keyword">WHERE</span> conditions <span class="operator">&lt;=&gt;</span> (</span><br><span class="line">      <span class="keyword">SELECT</span> <span class="keyword">column</span></span><br><span class="line">      <span class="keyword">FROM</span> name_for_summary_data)</span><br><span class="line">   [<span class="keyword">ORDER</span> <span class="keyword">BY</span> columns]</span><br></pre></td></tr></table></figure><h4 id="join"><a href="#join" class="headerlink" title="join"></a><code>join</code></h4><p>JOIN 子句用于把来自两个或多个表的行结合起来，基于这些表之间的共同字段。</p><h5 id="inner-join"><a href="#inner-join" class="headerlink" title="inner join"></a><code>inner join</code></h5><ul><li><code>natural join</code> <code>inner join</code> <code>inner using</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> table1.column1, table2.column2...</span><br><span class="line"><span class="keyword">FROM</span> table1</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> table2</span><br><span class="line"><span class="keyword">ON</span> table1.common_filed <span class="operator">=</span> table2.common_field;</span><br></pre></td></tr></table></figure><p>查询会把 table1 中的每一行与 table2 中的每一行进行比较，找到所有满足连接谓词的行的匹配对。</p><p>内连接</p><h5 id="CROSS-JOIN"><a href="#CROSS-JOIN" class="headerlink" title="CROSS JOIN"></a><code>CROSS JOIN</code></h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> table1.column1, table2.column2...</span><br><span class="line"><span class="keyword">FROM</span> table1 <span class="keyword">cross</span> <span class="keyword">join</span> table2</span><br></pre></td></tr></table></figure><p>交叉连接（CROSS JOIN）把第一个表的每一行与第二个表的每一行进行匹配。如果两个输入表分别有 x 和 y 行，则结果表有 x*y 行。</p><h4 id="LEFT-OUTER-JOIN"><a href="#LEFT-OUTER-JOIN" class="headerlink" title="LEFT OUTER JOIN"></a><code>LEFT OUTER JOIN</code></h4><p>左外连接，首先执行一个内连接。然后，对于表 T1 中不满足表 T2 中连接条件的每一行，其中 T2 的列中有 null 值也会添加一个连接行。因此，连接的表在 T1 中每一行至少有一行。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ... <span class="keyword">FROM</span> table1 <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> table2 <span class="keyword">ON</span> conditional_expression ...</span><br></pre></td></tr></table></figure><h3 id="SQL函数"><a href="#SQL函数" class="headerlink" title="SQL函数"></a><code>SQL</code>函数</h3><h4 id="st-asgeojson"><a href="#st-asgeojson" class="headerlink" title="st_asgeojson"></a><code>st_asgeojson</code></h4><p><code>st_asgeojson(geometry)</code></p><p>把空间对象输出为<code>JSON</code>字符串，当输出结果为<code>JSON</code>字符串是，可以使用类型转换将<code>JSON</code>字符串转为<code>JSON</code>对象。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">st_asegeojson()::json</span><br><span class="line">st_asegeojson()::jsonb</span><br><span class="line"><span class="comment">-- postgresql支持的两种数据类型，json和jsonb</span></span><br><span class="line"><span class="comment">-- json存储快，使用慢；jsonb存储慢，使用快。</span></span><br><span class="line"><span class="comment">-- json是对输入的完整拷贝，使用时再去解析，所以它会保留输入的空格，重复键以及顺序等。jsonb是解析输入后保存的二进制，解析时会删除不必要的空格和重复的键，顺序和输入可能也不相同。</span></span><br></pre></td></tr></table></figure><h4 id="st-geoFromtext"><a href="#st-geoFromtext" class="headerlink" title="st_geoFromtext"></a><code>st_geoFromtext</code></h4><p>根据字符串表示构造几何空间信息，<code>st_geoFromtext(WKT,SRID)</code>。</p><table><thead><tr><th>WKT</th><th>包含几何文本表示的字符串，eg:LINESTRING(1 2 3, 4 5 6)</th></tr></thead><tbody><tr><td>SRID</td><td>几何信息的参考坐标系，如果不指定则默认为0</td></tr></tbody></table><h4 id="ST-Centroid"><a href="#ST-Centroid" class="headerlink" title="ST_Centroid"></a><code>ST_Centroid</code></h4><p>获取几何对象的中心点，返回空间信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ST_Centroid(<span class="string">&#x27;MULTIPOINT ( -1 0, -1 2, -1 3, -1 4, -1 7, 0 1, 0 3, 1 1, 2 0, 6 0, 7 8, 9 8, 10 6 )&#x27;</span>);</span><br><span class="line"><span class="comment">------------------------------------------</span></span><br><span class="line"><span class="number">010100000062277662277602406227766227760</span>A40</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> A <span class="keyword">as</span> (<span class="keyword">SELECT</span> ST_Centroid(<span class="string">&#x27;MULTIPOINT ( -1 0, -1 2, -1 3, -1 4, -1 7, 0 1, 0 3, 1 1, 2 0, 6 0, 7 8, 9 8, 10 6 )&#x27;</span>) <span class="keyword">as</span> geom )</span><br><span class="line"><span class="keyword">SELECT</span> st_asgeojson(geom) <span class="keyword">FROM</span> A</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;Point&quot;</span><span class="punctuation">,</span><span class="attr">&quot;coordinates&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">2.307692308</span><span class="punctuation">,</span><span class="number">3.307692308</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="CONCAT-ST-X-ST-Y生成X-Y坐标"><a href="#CONCAT-ST-X-ST-Y生成X-Y坐标" class="headerlink" title="CONCAT+ST_X+ST_Y生成X,Y坐标"></a><code>CONCAT+ST_X+ST_Y生成X,Y坐标</code></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(ST_X(<span class="string">&#x27;POINT(-122.34900 47.65100)&#x27;</span>),<span class="string">&#x27; &#x27;</span>,ST_Y(<span class="string">&#x27;POINT(-122.34900 47.65100)&#x27;</span>)) <span class="keyword">AS</span> geoxy</span><br></pre></td></tr></table></figure><h4 id="json-strip-nulls"><a href="#json-strip-nulls" class="headerlink" title="json_strip_nulls"></a><code>json_strip_nulls</code></h4><p>递归地删除对象中的值为 null 的字段，非对象字段的 null 值不处理。</p><h4 id="row-to-json"><a href="#row-to-json" class="headerlink" title="row_to_json"></a><code>row_to_json</code></h4><h4 id="array-to-json"><a href="#array-to-json" class="headerlink" title="array_to_json"></a><code>array_to_json</code></h4><h4 id="array-agg"><a href="#array-agg" class="headerlink" title="array_agg"></a><code>array_agg</code></h4><h3 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#查看数据库 </span><br><span class="line">postgres<span class="operator">=</span># \l</span><br><span class="line">                                   List <span class="keyword">of</span> databases</span><br><span class="line">    Name     <span class="operator">|</span>  Owner   <span class="operator">|</span> Encoding <span class="operator">|</span>   <span class="keyword">Collate</span>   <span class="operator">|</span>    Ctype    <span class="operator">|</span>   Access privileges   </span><br><span class="line"><span class="comment">-------------+----------+----------+-------------+-------------+-----------------------</span></span><br><span class="line"> aos         <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> </span><br><span class="line"> aos_default <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> </span><br><span class="line"> nb<span class="operator">-</span>iot      <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> </span><br><span class="line"> nyc         <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> </span><br><span class="line"> postgres    <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> </span><br><span class="line"> siteplan    <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> </span><br><span class="line"> spatial     <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> </span><br><span class="line"> spatialgis  <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> </span><br><span class="line"> template0   <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> <span class="operator">=</span>c<span class="operator">/</span>postgres          <span class="operator">+</span></span><br><span class="line">             <span class="operator">|</span>          <span class="operator">|</span>          <span class="operator">|</span>             <span class="operator">|</span>             <span class="operator">|</span> postgres<span class="operator">=</span>CTc<span class="operator">/</span>postgres</span><br><span class="line"> template1   <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> <span class="operator">=</span>c<span class="operator">/</span>postgres          <span class="operator">+</span></span><br><span class="line">             <span class="operator">|</span>          <span class="operator">|</span>          <span class="operator">|</span>             <span class="operator">|</span>             <span class="operator">|</span> postgres<span class="operator">=</span>CTc<span class="operator">/</span>postgres</span><br><span class="line"> test        <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> </span><br><span class="line"> xps         <span class="operator">|</span> postgres <span class="operator">|</span> UTF8     <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> en_US.UTF<span class="number">-8</span> <span class="operator">|</span> </span><br></pre></td></tr></table></figure><h3 id="指定选择表"><a href="#指定选择表" class="headerlink" title="指定选择表"></a>指定选择表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 选择nyc表</span><br><span class="line">postgres<span class="operator">=</span># \c nyc;</span><br><span class="line">psql (<span class="number">11.15</span>, server <span class="number">9.6</span><span class="number">.24</span>)</span><br><span class="line">You <span class="keyword">are</span> now connected <span class="keyword">to</span> database &quot;nyc&quot; <span class="keyword">as</span> <span class="keyword">user</span> &quot;postgres&quot;.</span><br></pre></td></tr></table></figure><h3 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a>查看表结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nyc<span class="operator">=</span># \d city;</span><br><span class="line">                                    <span class="keyword">Table</span> &quot;public.city&quot;</span><br><span class="line"> <span class="keyword">Column</span> <span class="operator">|</span>         Type          <span class="operator">|</span> <span class="keyword">Collation</span> <span class="operator">|</span> Nullable <span class="operator">|</span>              <span class="keyword">Default</span>              </span><br><span class="line"><span class="comment">--------+-----------------------+-----------+----------+-----------------------------------</span></span><br><span class="line"> gid    <span class="operator">|</span> <span class="type">integer</span>               <span class="operator">|</span>           <span class="operator">|</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="operator">|</span> nextval(<span class="string">&#x27;city_gid_seq&#x27;</span>::regclass)</span><br><span class="line"> name   <span class="operator">|</span> <span class="type">character</span> <span class="type">varying</span>(<span class="number">15</span>) <span class="operator">|</span>           <span class="operator">|</span>          <span class="operator">|</span> </span><br><span class="line"> number <span class="operator">|</span> <span class="type">integer</span>               <span class="operator">|</span>           <span class="operator">|</span>          <span class="operator">|</span> </span><br><span class="line"> geom   <span class="operator">|</span> geometry(Point)       <span class="operator">|</span>           <span class="operator">|</span>          <span class="operator">|</span> </span><br><span class="line">Indexes:</span><br><span class="line">    &quot;city_pkey&quot; <span class="keyword">PRIMARY</span> KEY, btree (gid)</span><br><span class="line">    &quot;city_geom_idx&quot; gist (geom)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#删除数据库</span><br><span class="line"><span class="keyword">DROP</span> DATABASE nbiot;</span><br><span class="line">#创建数据库</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE nbiot;</span><br><span class="line">\c nbiot;</span><br><span class="line">psql <span class="operator">-</span>d nbiot <span class="operator">-</span>U postgres <span class="operator">-</span>f <span class="operator">/</span>home<span class="operator">/</span>weihu<span class="operator">/</span>public.sql</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Postgresql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu搭建hexo</title>
      <link href="/2023/02/17/ubuntu%E6%90%AD%E5%BB%BAhexo/"/>
      <url>/2023/02/17/ubuntu%E6%90%AD%E5%BB%BAhexo/</url>
      
        <content type="html"><![CDATA[<ol><li>环境准备</li></ol><p>安装<code>npm</code>、<code>node.js</code>、<code>git</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update </span><br><span class="line">sudo apt install nodejs npm git</span><br><span class="line"><span class="comment">#xx --version 查看是否安装成功</span></span><br><span class="line">npm --version</span><br><span class="line">nodejs --version</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><ol start="2"><li>安装并启动<code>hexo</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#npm安装hexo脚手架</span></span><br><span class="line">sudo npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化以及新建一个myblog文件夹存放博客</span></span><br><span class="line">hexo init myblog</span><br><span class="line"><span class="built_in">cd</span> myblog</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动hexo</span></span><br><span class="line">hexo server</span><br><span class="line"><span class="comment">#启动完毕后，浏览器访问http://&lt;ip&gt;:4000查看博客</span></span><br></pre></td></tr></table></figure><ol start="3"><li>使用<code>hexo</code></li></ol><p>创建一篇博客发布并部署到<code>hexo</code>上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入上述新建的myblog路径</span></span><br><span class="line"><span class="built_in">cd</span> myblog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发布一篇播客笔记</span></span><br><span class="line">hexo new <span class="string">&quot;postName&quot;</span></span><br><span class="line"><span class="comment">#这样在source/_posts目录下会创建一篇名为postName.md的文章</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成`hexo`静态文件，静态文件将存放在public目录下</span></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line"><span class="comment">#部署</span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>访问http:&#x2F;&#x2F;<ip>:4000查看博客</p><ol start="4"><li>一些<code>hexo</code>的基本命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建新文章</span></span><br><span class="line">hexo new <span class="string">&quot;postName&quot;</span></span><br><span class="line"><span class="comment">#创建新页面</span></span><br><span class="line">hexo new page <span class="string">&quot;pageName&quot;</span></span><br><span class="line"><span class="comment">#生成静态文件</span></span><br><span class="line">hexo generate(g)</span><br><span class="line"><span class="comment">#启动本地服务器</span></span><br><span class="line">hexo server(s)</span><br><span class="line"><span class="comment">#清除缓存文件 (db.json) 和已生成的静态文件 (public)</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment">#将网站部署到远程仓库</span></span><br><span class="line">hexo deploy(d)</span><br><span class="line"><span class="comment">#发布草稿</span></span><br><span class="line">hexo publish 或 hexo p</span><br><span class="line"><span class="comment">#列出所有文章和草稿</span></span><br><span class="line">hexo list</span><br><span class="line"><span class="comment">#查看帮助信息</span></span><br><span class="line">hexo <span class="built_in">help</span> </span><br></pre></td></tr></table></figure><ol start="5"><li>通过<code>username.github.io</code>访问<code>hexo</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在github新建一个public名为usernmae.githubo.io仓库</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装插件</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>修改myblog路径的<code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/Muyushuiji/Muyushuiji.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成静态文件</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment">#部署</span></span><br><span class="line">hexo d</span><br><span class="line"></span><br><span class="line"><span class="comment">#tips:部署到github需要username以及password，password填写的是Personal Access Token</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Deploy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
